name: Build

on:
  push:
    branches: [master]
    paths-ignore:
      - '**.md'
      - '**.spec.js'
      - '.idea'
      - '.vscode'
      - '.dockerignore'
      - 'Dockerfile'
      - '.gitignore'
      - '.github/**'
      - '!.github/workflows/build.yml'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm install

      - name: Build Release Files
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: release_on_${{ matrix. os }}
      #     path: release/
      #     retention-days: 5

      # - name: release
      #   uses: actions/create-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: 'release/**'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
        - name: release
          uses: softprops/action-gh-release@v0.1.14
          if: startsWith(github.ref, 'refs/tags/')
          with:
            files: "dist/**"
          env:
            GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: release/*
      #     asset_name: ${{ github.ref }}.tar.gz
      #     asset_content_type: application/gzip
      # - name: upload artifacts
      #   uses: actions/upload-artifact@v3.0.0
      #   with:
      #     name: ${{ matrix.os }}
      #     path: release
